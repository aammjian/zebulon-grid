{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"caption"
			],
			[
				"di",
				"dimension"
			],
			[
				"gr",
				"gridId"
			],
			[
				"col",
				"columnIndex"
			],
			[
				"filte",
				"filterKeys"
			],
			[
				"filt",
				"filterKeys"
			],
			[
				"fil",
				"filteredMap"
			],
			[
				"che",
				"checked"
			],
			[
				"in",
				"inherit"
			],
			[
				"isn",
				"isNotFiltered"
			],
			[
				"ch",
				"checkedValues"
			],
			[
				"sele",
				"selectedRange"
			],
			[
				"ro",
				"rowLeaves"
			],
			[
				"rowS",
				"rowStopIndex"
			],
			[
				"dim",
				"dimensions"
			],
			[
				"is",
				"isNotFiltered"
			],
			[
				"dimensionV",
				"dimensionValuesSelector"
			],
			[
				"dime",
				"dimensionId"
			],
			[
				"pro",
				"props"
			],
			[
				"tog",
				"toggleMeasure"
			],
			[
				"sor",
				"sortDirection"
			],
			[
				"so",
				"sortDirection"
			],
			[
				"to",
				"toggleMeasure"
			],
			[
				"av",
				"availableMeasuresSelector"
			],
			[
				"Z",
				"ZOOM_OUT"
			],
			[
				"z",
				"zoomOut"
			],
			[
				"zoo",
				"zoomIn"
			],
			[
				"scrol",
				"scrollColumn"
			],
			[
				"scrollT",
				"scrollToColumn"
			],
			[
				"scr",
				"scrollToColumn"
			],
			[
				"row",
				"rowIndex"
			],
			[
				"H",
				"HeaderType"
			],
			[
				"get",
				"getLeaves"
			],
			[
				"React",
				"ReactContextMenu"
			],
			[
				"ex",
				"expect"
			],
			[
				"exe",
				"expect"
			],
			[
				"ax",
				"axisTree"
			],
			[
				"build",
				"buildAxisHeaders"
			],
			[
				"measu",
				"measureHeadersAxis"
			],
			[
				"meas",
				"measures"
			],
			[
				"bo",
				"border"
			],
			[
				"focus",
				"focusedCell"
			],
			[
				"sc",
				"scrollTop"
			],
			[
				"collect",
				"collectMenu"
			],
			[
				"h",
				"handleMouseDown"
			],
			[
				"hea",
				"header"
			],
			[
				"dimensio",
				"dimensions"
			],
			[
				"cro",
				"crossPositions"
			],
			[
				"cr",
				"crossPositionsSelector"
			],
			[
				"coll",
				"collectMenu"
			],
			[
				"drag",
				"dragSourceCollect"
			],
			[
				"C",
				"ConnectedMenu"
			],
			[
				"ne",
				"newPosition"
			],
			[
				"D",
				"DIMENSION"
			],
			[
				"han",
				"handleClickMenu"
			],
			[
				"posi",
				"positionStyle"
			],
			[
				"header",
				"headerLeaves"
			],
			[
				"he",
				"headerLeaves"
			],
			[
				"isA",
				"isAffixManaged"
			],
			[
				"las",
				"lastChildSize"
			],
			[
				"style",
				"positionStyle"
			],
			[
				"ba",
				"background-color"
			],
			[
				"RO",
				"ROWS"
			],
			[
				"colum",
				"columnCrossPositions"
			],
			[
				"n",
				"newAxis"
			],
			[
				"R",
				"ROOT_ID"
			],
			[
				"a",
				"arg0"
			],
			[
				"mo",
				"moveIndex"
			],
			[
				"m",
				"moveDimension"
			],
			[
				"Dr",
				"DropTarget"
			],
			[
				"isNul",
				"isNullOrUndefined"
			],
			[
				"id",
				"id"
			],
			[
				"cu",
				"currentDimension"
			],
			[
				"Sel",
				"selectRange"
			],
			[
				"se",
				"selectRange"
			],
			[
				"sle",
				"selectedCellEnd"
			],
			[
				"sel",
				"selectRange"
			],
			[
				"hande",
				"handleMouseOver"
			],
			[
				"colu",
				"columnIndex"
			],
			[
				"handle",
				"handleClick"
			],
			[
				"handl",
				"handleMouseDown"
			],
			[
				"hand",
				"handleMouseDown"
			],
			[
				"shi",
				"shiftKeyIsPressed"
			],
			[
				"selec",
				"selectedRange"
			],
			[
				"selecte",
				"selectedCellStart"
			],
			[
				"sh",
				"shiftKeyIsPressed"
			],
			[
				"handleKey",
				"handleKeyUp"
			],
			[
				"ctr",
				"ctrlKey"
			],
			[
				"me",
				"metaKey"
			],
			[
				"A",
				"ArrowRight"
			],
			[
				"Ar",
				"ArrowUp"
			],
			[
				"dimenso",
				"DimensionHeaders"
			],
			[
				"colh",
				"columnHorizontalCount"
			],
			[
				"data",
				"dataCells"
			],
			[
				"s",
				"selectCell"
			],
			[
				"sl",
				"selectedRange"
			],
			[
				"handleS",
				"handleScrollToChange"
			],
			[
				"column",
				"columnIndex"
			],
			[
				"selected",
				"selectedRangeSelector"
			],
			[
				"columnI",
				"columnIndex"
			],
			[
				"getC",
				"getColumnWidth"
			],
			[
				"are",
				"areChangesManaged"
			],
			[
				"const",
				"constructor"
			],
			[
				"re",
				"restMapStateToProps"
			],
			[
				"select",
				"selectedRangeSelector"
			],
			[
				"st",
				"stopIndex"
			],
			[
				"focu",
				"focusCellKeys"
			],
			[
				"pivo",
				"pivotgrid-dimension-header"
			],
			[
				"cl",
				"classNames"
			],
			[
				"EX",
				"EXPAND_COLLAPSE_ATTRIBUTE"
			],
			[
				"p",
				"positions"
			],
			[
				"d",
				"dimensions"
			],
			[
				"dimen",
				"dimensions"
			],
			[
				"axis",
				"axisSizes"
			],
			[
				"map",
				"mapDispatchToProps"
			],
			[
				"chi",
				"childrenKeys"
			],
			[
				"isN",
				"isNullOrUndefined"
			],
			[
				"cell",
				"cellKey"
			],
			[
				"has",
				"hasCollpasedParent"
			],
			[
				"l",
				"left"
			],
			[
				"cross",
				"crossSizeAndPositionManager"
			],
			[
				"Axis",
				"AxisType"
			],
			[
				"getCe",
				"getCellHeightByKey"
			],
			[
				"getCek",
				"getCellHeightByKey"
			],
			[
				"getcellhe",
				"getCellHeightByKeySelector"
			],
			[
				"getce",
				"getCellHeightByKeySelector"
			],
			[
				"getR",
				"getRowLeaves"
			],
			[
				"getCell",
				"getCellByKeySelector"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/pivotGrid/components/DataCells/DataCells.js",
			"settings":
			{
				"buffer_size": 6701,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import React from 'react';\nimport {\n  ContextMenu as ReactContextMenu,\n  MenuItem,\n  SubMenu\n} from 'react-contextmenu';\nimport { isNullOrUndefined } from '../../utils/generic';\nimport { MEASURE_ID } from '../../constants';\nimport Filter from '../../containers/Filter';\n\n// const Filter = (dimensionId, values, filter) => {\n//   const checkedValues = values.map(val => ({\n//     checked: filter.values.includes(val.key),\n//     label: val.label,\n//     value: val.key\n//   }));\n//   return (\n//     <VirtualizedCheckbox\n//       items={checkedValues}\n//       //     onOk={(all, result) =>\n//       //       handleFilter(all, '', '', result.map(box => box.value), false)}\n//       //     onCancel={onHide}\n//       maxHeight={100}\n//     />\n//   );\n// };\n\nconst DimensionMenu = (id, trigger) => {\n  const isDisable = trigger.availableDimensions.length === 0;\n  const filterSubmenuStyle = !isNullOrUndefined(trigger.dimensionFilter)\n    ? { fontWeight: 'bold' }\n    : null;\n  // <SubMenu title=\"filter\" style={filterSubmenuStyle}>\n  //   <MenuItem onClick={trigger.onItemClick}>\n  //     Filter(\n  //     trigger.dimensionId,\n  //     trigger.dimensionValues,\n  //     filter={trigger.dimensionFilter})\n  //   </MenuItem>\n  // </SubMenu>\n\n  return (\n    <ReactContextMenu id={id}>\n      <MenuItem onClick={trigger.onItemClick} data={{ action: 'sort' }}>\n        {`Sort  ${trigger.direction} `}\n      </MenuItem>\n      <SubMenu\n        title=\"filter\"\n        style={\n          !isNullOrUndefined(trigger.dimensionFilter)\n            ? { fontWeight: 'bold' }\n            : null\n        }\n      >\n        <Filter dimensionId={trigger.dimensionId} />\n      </SubMenu>\n      <MenuItem onClick={trigger.onItemClick} data={{ action: 'remove' }}>\n        Remove\n      </MenuItem>\n\n      <SubMenu title=\"Add dimension\" disabled={isDisable}>\n        {trigger.availableDimensions.map(dimension =>\n          <MenuItem\n            onClick={trigger.onItemClick}\n            data={{ action: 'add', newDimensionId: dimension.id }}\n          >\n            {dimension.caption}\n          </MenuItem>\n        )}\n\n      </SubMenu>\n    </ReactContextMenu>\n  );\n};\nconst MeasureMenu = (id, trigger) => {\n  const isDisable = trigger.availableMeasures.length === 0;\n  return (\n    <ReactContextMenu id={id}>\n      <MenuItem onClick={trigger.onItemClick} data={{ action: 'move' }}>\n        Move measures\n      </MenuItem>\n      <MenuItem\n        onClick={trigger.onItemClick}\n        data={{ action: 'remove' }}\n        disabled={Object.keys(trigger.measures).length < 2}\n      >\n        Remove\n      </MenuItem>\n      <SubMenu title=\"Add\" disabled={isDisable}>\n        {trigger.availableMeasures.map(measure =>\n          <MenuItem\n            onClick={trigger.onItemClick}\n            data={{ action: 'add', newMeasureId: measure.id }}\n          >\n            {measure.caption}\n          </MenuItem>\n        )}\n\n      </SubMenu>\n    </ReactContextMenu>\n  );\n};\nconst DataCellMenu = (id, trigger) => {\n  const filterSubmenuStyle = !isNullOrUndefined(trigger.filter)\n    ? { fontWeight: 'bold' }\n    : null;\n  return (\n    <ReactContextMenu id={id}>\n      <MenuItem onClick={trigger.onItemClick} data={{ action: 'drilldown' }}>\n        DrillDown\n      </MenuItem>\n      <SubMenu title=\"Filters\">\n        {trigger.dimensions\n          .filter(dimension => dimension.id !== MEASURE_ID)\n          .map(dimension =>\n            <SubMenu title={dimension.caption}>\n              <Filter dimensionId={dimension.id} style={filterSubmenuStyle} />\n            </SubMenu>\n          )}\n\n      </SubMenu>\n    </ReactContextMenu>\n  );\n};\nconst ContextMenu = props => {\n  const { id, trigger } = props;\n\n  if (isNullOrUndefined(trigger)) {\n    return <ReactContextMenu id={id} disabled={true} />;\n  }\n\n  if (trigger.type === 'dimension-header') {\n    return DimensionMenu(id, trigger);\n  } else if (trigger.type === `header-${trigger.axis}`) {\n    return MeasureMenu(id, trigger);\n  } else if (trigger.type === 'data-cell') {\n    return DataCellMenu(id, trigger);\n  }\n};\n\nexport default ContextMenu;\n",
			"file": "src/pivotGrid/components/ContextMenu/ContextMenu.js",
			"file_size": 4199,
			"file_write_time": 131450271757581249,
			"settings":
			{
				"buffer_size": 4058,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/selectors/cell.selector.js",
			"settings":
			{
				"buffer_size": 4779,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/utils/generic.js",
			"settings":
			{
				"buffer_size": 4141,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/components/Header/Header.js",
			"settings":
			{
				"buffer_size": 4302,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/components/DataCell/DataCell.js",
			"settings":
			{
				"buffer_size": 2107,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/Aggregation.js",
			"settings":
			{
				"buffer_size": 2787,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/pivotGrid/services/copyService.js",
			"settings":
			{
				"buffer_size": 4778,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/PivotGrid.demo.js",
			"settings":
			{
				"buffer_size": 7242,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import React, { Component } from 'react';\nimport { ScrollSync } from 'react-virtualized/dist/commonjs/ScrollSync';\nimport { ArrowKeyStepper } from 'react-virtualized/dist/commonjs/ArrowKeyStepper';\nimport { DropTarget } from 'react-dnd';\n\n// import ArrowKeyStepper from '../../containers/ArrowKeyStepper';\nimport DataCells from '../../containers/DataCells';\nimport DimensionHeaders from '../../containers/DimensionHeaders';\nimport ColumnHeaders from '../../containers/ColumnHeaders';\nimport RowHeaders from '../../containers/RowHeaders';\nimport DragLayer from './DragLayer';\nimport { isEmpty, isNull } from '../../utils/generic';\nimport { ZOOM_IN, ZOOM_OUT } from '../../constants';\n// ------------------------------------------\n// CONCEPTS\n// ------------------------------------------\n// The pivot grid is build using a dataset (as an array of data rows) and a meta description(configuration) of the data set\n// most of the configuration can be determined from the dataset, nevertheless\n// - MEASURE:\n// measures are the descriptions for available computed (aggregated) values displayed into the grid\n// measures properties are\n//    - id\n//    - label\n//    - aggregation function\n//    - data accessor\n//    - format\n//  measures together can be restituted in rows or columns\n// - DIMENSION:\n//  dimensions are the descriptions of the axes used to determine the perimeter of the calculation of the measures (group by)\n// dimension properties are:\n//    - id\n//    - label\n//    - id accessor\n//    - label accessor\n//    - sort accessor\n//    - format\n//    - parent dimension for 'attributes'\n//      attributes are additional properties of a dimension with (0,1) cardinality (person -> gender, age, nationality...) ,g\n//      it will be possible to expand/collapse those attributes\n//  any dimension can be restituted either in row nor in column\n//  filters can be defined on the dimension and will be applied to the dataset\n// in a 'SQL like' expression you may represent the result of your configuration as something like:\n// select\n//        measure1.aggregation_function(measure1.data_accessor),\n//        measure2.aggregation_function(measure2.data_accessor)\n// from   dataset\n// where  dimension3.filter_function()\n// group by\n//        dimension1.id_accessor,dimension1.label_accessor in row,\n//        dimension2.id_accessor,dimension2.label_accessor in row,\n//        dimension3.id_accessor,dimension3.label_accessor in column\n// order by\n//        dimension1.sort_accessor,dimension2.sort_accessor\n// ------------------------------------------\n// PIVOT GRID\n// ------------------------------------------\n// pivot grid is the main component is the main component\n// it is decomposed in 4 different parts\n// - the data cells grid where the measures aggregation calculations are displayed\n// this is a virtualised grid in rows and columns with standards navigation, selection, copy... functionalities\n// - the row headers grid\n// this is a virtualised grid in rows, synchronized in rows with the the datacells grid that display,\n// as a tree the successive dimensions values (for in row dimensions)\n// this is a virtualised grid in columns, synchronized in columns with the the datacells grid that display,\n// as a tree the successive dimensions values (for in column dimensions)\n// - the dimension headers grid that will display the captions of dimensions in rows and columns\n// most of changes of the pivot grid configuration are available there (dimension  moves, sort...)\n// const Checkbox = ({ onChange, checked, key, label, index, style }) =>\n//   <div style={{ ...style, textAlign: 'left' }}>\n//     <label>\n//       <input\n//         type=\"checkbox\"\n//         value={label}\n//         onChange={onChange}\n//         checked={checked || false}\n//       />\n//       {label}\n//     </label>\n//   </div>;\n\nclass PivotGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.scrollToRow = 0;\n    this.scrollToColumn = 0;\n    this.focusCellKeys = [];\n    this.handleScrollToChange = this.handleScrollToChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('copy', this.handleCopy);\n  }\n\n  componentDidUnMount() {\n    document.removeEventListener('copy', this.handleCopy);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // let nextScrollToRow;\n    // let nextScrollColumn;\n    // const current = {};\n    // const next = {};\n    // if (this.props.focusCells !== nextProps.focusCells) {\n    //   this.focusCellKeys = nextProps.focusCells.map(cell =>\n    //     getCellInfosSelectorKey(cell)\n    //   );\n    //   if (this.focusCellKeys.length > 0) {\n    //     nextScrollColumn = keyToIndex(\n    //       nextProps.columnHeaders,\n    //       this.focusCellKeys[0].columns\n    //     );\n    //     nextScrollToRow = keyToIndex(\n    //       nextProps.rowHeaders,\n    //       this.focusCellKeys[0].rows\n    //     );\n    //   }\n    // } else {\n\n    // // Update row and column indexes to make sure the same header stay in view when toggling measure or filtering\n    // current.dataDimensionsCount = this.props.dataDimensionsCount;\n    // next.dataDimensionsCount = nextProps.dataDimensionsCount;\n    // if (this.props.layout.rowVerticalCount !== nextProps.layout.rowVerticalCount) {\n    //   console.log('updating row start index');\n    //   current.dimensions = this.props.rowDimensions;\n    //   next.dimensions = nextProps.rowDimensions;\n    //   current.firstHeaderRow = this.props.rowHeaders[this.scrollToRow];\n    //   const nextFirstHeaderKey = getNextKey(current, next);\n    //   nextScrollToRow = keyToIndex(nextProps.rowHeaders, nextFirstHeaderKey);\n    // }\n    // if (this.props.columnHeaders.length !== nextProps.columnHeaders.length) {\n    //   console.log('updating column start index');\n    //   current.dimensions = this.props.columnDimensions;\n    //   next.dimensions = nextProps.columnDimensions;\n    //   current.firstHeaderRow = this.props.columnHeaders[this.columnStartIndex];\n    //   const nextFirstHeaderKey = getNextKey(current, next);\n    //   nextScrollColumn = keyToIndex(\n    //     nextProps.columnHeaders,\n    //     nextFirstHeaderKey\n    //   );\n    // }\n    // }\n    // // If keyToIndex does not find the key in the headers, it returns -1\n    // // In this case, do nothing\n    // if (nextScrollToRow >= 0) this.scrollToRow = nextScrollToRow;\n    // if (nextScrollColumn >= 0) this.columnStartIndex = nextScrollColumn;\n    if (!isEmpty(nextProps.selectedRange.focusedCell)) {\n      this.scrollToRow =\n        nextProps.selectedRange.focusedCell.rowIndex || this.scrollToRow;\n      this.scrollToColumn =\n        nextProps.selectedRange.focusedCell.columnIndex || this.scrollToColumn;\n    }\n    console.log([this.scrollToRow]);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { height, width, setSizes } = this.props;\n    if (height !== prevProps.height || width !== prevProps.width) {\n      setSizes({ height, width });\n    }\n  }\n\n  handleCopy = () => {\n    if (\n      // Works only if the grid is focused\n      this.modifierKeyIsPressed\n    ) {\n      this.props.copy(this.props.selectedRange);\n    }\n  };\n\n  handleKeyDown = e => {\n    const { columnHorizontalCount, rowVerticalCount } = this.props.layout;\n    this.modifierKeyIsPressed = e.ctrlKey || e.metaKey;\n    this.shiftKeyIsPressed = e.shiftKey;\n    if (e.metaKey || e.ctrlKey) {\n      // ctrl A -> select all\n      if (e.which === 65) {\n        this.props.selectRange({\n          selectedCellStart: { columnIndex: 0, rowIndex: 0 },\n          selectedCellEnd: {\n            columnIndex: columnHorizontalCount,\n            rowIndex: rowVerticalCount\n          }\n        });\n        e.preventDefault();\n      }\n      // ctrl + -> zoom in\n      if (e.key === '+') {\n        this.props.zoom(ZOOM_IN);\n\n        e.preventDefault();\n      }\n      // ctrl - -> zoom out\n      if (e.key === '-') {\n        this.props.zoom(ZOOM_OUT);\n        e.preventDefault();\n      }\n      // Page down\n      //   if (e.key === 'PageDown') {\n      //     handleScrollToChange({});\n\n      //     e.preventDefault();\n      // }\n    }\n  };\n  handleKeyUp = e => {\n    if (e.which === 17) {\n      this.modifierKeyIsPressed = false;\n    }\n    if (e.which === 16) {\n      this.shiftKeyIsPressed = false;\n    }\n  };\n\n  handleScrollToChange = ({ scrollToColumn, scrollToRow }) => {\n    const selectedRange = this.props.selectedRange;\n\n    if (this.shiftKeyIsPressed) {\n      // after column selection\n      if (isNull(selectedRange.focusedCell.rowIndex)) {\n        const columnIndex =\n          selectedRange.selectedCellEnd.columnIndex +\n          (scrollToColumn > this.scrollToColumn ? 1 : -1);\n        this.props.selectRange({\n          selectedCellEnd: {\n            columnIndex,\n            rowIndex: selectedRange.selectedCellEnd.rowIndex\n          },\n          focusedCell: { columnIndex, rowIndex: null }\n        });\n      } else if (isNull(selectedRange.focusedCell.columnIndex)) {\n        // after row  selection\n        const rowIndex =\n          selectedRange.selectedCellEnd.rowIndex +\n          (scrollToRow > this.scrollToRow ? 1 : -1);\n        this.props.selectRange({\n          selectedCellEnd: {\n            rowIndex,\n            columnIndex: selectedRange.selectedCellEnd.columnIndex\n          },\n          focusedCell: { rowIndex, columnIndex: null }\n        });\n      } else {\n        this.props.selectRange({\n          selectedCellEnd: {\n            columnIndex: scrollToColumn,\n            rowIndex: scrollToRow\n          },\n          focusedCell: { columnIndex: scrollToColumn, rowIndex: scrollToRow }\n        });\n      }\n    } else {\n      this.props.selectCell({\n        columnIndex: scrollToColumn,\n        rowIndex: scrollToRow\n      });\n    }\n    this.scrollToRow = scrollToRow;\n    this.scrollToColumn = scrollToColumn;\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      width,\n      layout,\n      // customFunctions,\n      drilldown,\n      id: gridId\n    } = this.props;\n\n    const { columnHorizontalCount, rowVerticalCount } = layout;\n\n    return connectDropTarget(\n      // Width has to be set in order to render correctly in a resizable box\n      // Position must be relative so that the absolutely positioned DragLayer behaves correctly\n      <div\n        style={{ width, position: 'relative' }}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n      >\n        <DragLayer gridId={gridId} />\n        <ArrowKeyStepper\n          columnCount={columnHorizontalCount}\n          mode=\"cells\"\n          rowCount={rowVerticalCount}\n          scrollToRow={this.scrollToRow}\n          scrollToColumn={this.scrollToColumn}\n          onScrollToChange={this.handleScrollToChange}\n          isControlled={true}\n        >\n\n          {({ onSectionRendered, scrollToColumn, scrollToRow }) =>\n            <ScrollSync>\n              {({\n                clientHeight,\n                clientWidth,\n                onScroll,\n                scrollLeft,\n                scrollTop\n              }) =>\n                <div className=\"pivotgrid-pivotgrid\">\n                  <div style={{ display: 'flex' }}>\n                    <DimensionHeaders gridId={gridId} />\n                    <ColumnHeaders\n                      gridId={gridId}\n                      scrollLeft={scrollLeft}\n                      scrollTop={0}\n                    />\n                  </div>\n                  <div style={{ display: 'flex' }}>\n                    <RowHeaders\n                      scrollTop={scrollTop}\n                      scrollLeft={0}\n                      gridId={gridId}\n                    />\n                    <DataCells\n                      onSectionRendered={onSectionRendered}\n                      scrollToColumn={scrollToColumn}\n                      scrollToRow={scrollToRow}\n                      onScroll={onScroll}\n                      drilldown={drilldown}\n                      clientHeight={clientHeight}\n                      clientWidth={clientWidth}\n                      gridId={gridId}\n                    />\n                  </div>\n\n                </div>}\n            </ScrollSync>}\n        </ArrowKeyStepper>\n      </div>\n    );\n  }\n}\n\nconst gridSpec = {\n  drop(props, monitor, component) {\n    const handle = monitor.getItem();\n    const initialOffset = monitor.getInitialClientOffset();\n    const offset = monitor.getClientOffset();\n    component.props.updateCellSize({ handle, offset, initialOffset });\n  }\n};\n\nconst collect = connect => ({\n  connectDropTarget: connect.dropTarget()\n});\n\nPivotGrid.defaultProps = { id: 0 };\n\n// Add grid id to the type to ensure only correct drop target is used\nexport default DropTarget(\n  props => `cell-resize-handle--${props.id || 0}`,\n  gridSpec,\n  collect\n)(PivotGrid);\n",
			"file": "src/pivotGrid/components/PivotGrid/PivotGrid.js",
			"file_size": 13117,
			"file_write_time": 131450287880397048,
			"settings":
			{
				"buffer_size": 12759,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"packins",
				"Package Control: Install Package"
			],
			[
				"packre",
				"Package Control: Remove Package"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"esl",
				"ESLint"
			],
			[
				"instp",
				"Package Control: Install Package"
			],
			[
				"sesyjava",
				"Set Syntax: JavaScript"
			],
			[
				"in",
				"Indentation: Convert to Tabs"
			],
			[
				"pains",
				"Package Control: Install Package"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"togsi",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"tofo",
				"TodoReview: Open Files"
			],
			[
				"inp",
				"Package Control: Install Package"
			],
			[
				"tabe",
				"Table Editor: Enable for current view"
			],
			[
				"insp",
				"Package Control: Install Package"
			],
			[
				"omn",
				"OmniMarkupPreviewer: Preview Current Markup in Browser"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"stcre",
				"Set Syntax: Creole"
			],
			[
				"pacip",
				"Package Control: Install Package"
			],
			[
				"packcip",
				"Package Control: Install Package"
			],
			[
				"togls",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"setsyoc",
				"Set Syntax: Objective-C"
			],
			[
				"toglmim",
				"View: Toggle Minimap"
			]
		],
		"width": 736.0
	},
	"console":
	{
		"height": 459.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/thomas/dev_js/grid",
		"/C/Users/thomas/dev_js/grid/public",
		"/C/Users/thomas/dev_js/grid/src",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils",
		"/C/Users/thomas/dev_js/grid/src/utils"
	],
	"file_history":
	[
		"/C/Users/thomas/dev_js/grid/specs/drilldownInterface.spec.md",
		"/C/Users/thomas/dev_js/grid/src/utils/mock.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/hydrateStore.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/ContextMenu/ContextMenu.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/DimensionHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeaders/DimensionHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeader/DimensionHeader.js",
		"/C/Users/thomas/dev_js/grid/src/PivotGrid.demo.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/data.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Headers/Headers.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Forms/Filter.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/Filter.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/cell.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DataCell/DataCell.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Header/Header.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/sizes.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DataCells/DataCells.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/PivotGrid/PivotGrid.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/DataCells.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/dimensions.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/axis.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/constants/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/Filtering.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/filter.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/PivotGrid.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils/headers.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/config.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/RowHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/filters.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/services/copyService.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/Aggregation.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/ColumnHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/InnerHeader/InnerHeader.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/axis.selector.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/index.css",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/dimensions.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/axis.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/config.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/selection.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/selection.selector.js",
		"/C/Users/thomas/dev_js/grid/src/index.css",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/selection.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils/generic.js",
		"/C/Users/thomas/dev_js/grid/package.json",
		"/C/Users/thomas/dev_js/grid/lib/commonjs/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/collapses.selector.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/collapses.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/dimension.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/sizes.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/collapses.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/sizes.reducer.js",
		"/C/Users/thomas/AppData/Roaming/Sublime Text 3/Packages/ESLint/ESLint.sublime-settings",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/sizes.selector.test.js",
		"/C/Users/thomas/dev_js/grid/config/env.js",
		"/C/Users/thomas/dev_js/grid/public/index.html",
		"/C/Users/thomas/dev_js/grid/LICENSE.txt",
		"/C/Users/thomas/dev_js/grid/src/WrappedGrid.demo.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/WrappedGrid.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils/keys.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/Axis.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/Cells.js",
		"/C/Users/thomas/dev_js/grid/dim.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/PivotGrid/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeader/DimensionHeader.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/ColumnHeaders/ColumnHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/AxisUi.js",
		"/C/Users/thomas/dev_js/grid/node_modules/react-contextmenu/modules/AbstractMenu.js",
		"/C/Users/thomas/dev_js/grid/node_modules/react-contextmenu/modules/actions.js",
		"/C/Users/thomas/dev_js/grid/node_modules/react-contextmenu/modules/connectMenu.js",
		"/C/Users/thomas/dev_js/grid/node_modules/react-contextmenu/modules/ContextMenu.js",
		"/C/Users/thomas/dev_js/grid/src/App.test.js",
		"/C/Users/thomas/dev_js/grid/src/App.css",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils/headerSize.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeader/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeader/InnerHeader.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/PivotGrid/DragLayer.js",
		"/C/Users/thomas/dev_js/grid/.gitignore",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DataCells/Cells.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/data.action.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/data.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/ResizeHandle/ResizeHandle.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/utils/keys.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/cell.selector.test.js",
		"/C/Users/thomas/dev_js/grid/src/utils/Format.js",
		"/C/Users/thomas/dev_js/grid/specs/drilldownInterface.spec.html",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/dimension.action.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/dimensions.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/ArrowKeyStepper/ArrowKeyStepper.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/containers/ArrowKeyStepper.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Grid/Grid.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/PivotGrid/PivotGrid.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/icons/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/config.action.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/config.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/icons.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Headers/Headers.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/ColumnHeaders/ColumnHeaders.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/data.selector.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/selectors/dimensions.selector.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DimensionHeaders/DimensionHeaders.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/sizes.action.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/sizes.reducer.test.js",
		"/C/Users/thomas/AppData/Roaming/Sublime Text 3/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/C/Users/thomas/AppData/Roaming/Sublime Text 3/Packages/User/JsPrettier.sublime-settings",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Headers/index.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/RowHeaders/RowHeaders.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/RowHeaders/Headers.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/Dimension.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/fields.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/__snapshots__/WrappedGrid.test.js.snap",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/actions/filter.action.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/filters.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/DataCell/DataCell.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Grid/Grid.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Header/Header.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/measures.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/measures.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/axis.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/datafields.reducer.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/reducers/datafields.reducer.test.js",
		"/C/Users/thomas/dev_js/grid/src/pivotGrid/components/Header/index.js",
		"/C/Users/thomas/dev_js/grid/grid.sublime-project",
		"/C/Users/thomas/dev_js/grid/lib/commonjs/Cells.js",
		"/C/fullstack-react-code/redux/chat_intermediate/src/complete/App-9.js"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"",
			".mkv.fx",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"twoArraysIntersect",
			"getCellDimensionInfos",
			"cellDimensionInfos",
			"getCellInfosSelector",
			"drilldown",
			"customFunctions",
			"aggregations",
			"customFunctions",
			"custom",
			"context-menu-dimension-header",
			"context-menu-data",
			"gridId",
			"Object",
			"dimension-header",
			"'dimension-header'",
			"rowDimensionsSelector",
			"collectMenu",
			"nextProps",
			"prevProps",
			"nextrops",
			"nextprops",
			"prevProps",
			"isUpdating",
			"fiteredMap",
			"filteredValues",
			"fiteredValues",
			" =>",
			"fiteredValues",
			"solid",
			"res",
			"dimensionFiltersSelector",
			"filter",
			"DataCells",
			"align",
			"isNotfiltered",
			"val",
			"onChange",
			"checkbox",
			"console.log",
			">)\n",
			"rowStartIndex",
			"handleMouseDown",
			"handleScrollToChange",
			"selectRange",
			"sizes",
			"toggleMeasure",
			"headers",
			"Filter",
			"FilterPanel",
			"const {\n    //   columnDimensions,\n    //   rowDimensions,\n    //   height,\n    //   width,\n    //   zoom,\n    //   gridId\n    // } = this.props;",
			"ContextMenu",
			"dimensionValuesSelector",
			"Object.key",
			"availableMeasure",
			"collectMenu",
			"Object",
			"Object(",
			"sort",
			"dimensionValuesSelector",
			"deleteFilter",
			"DOMNode",
			"newDimensionId",
			"NewDimensionId",
			"isDragTarget",
			"connectDragSource",
			"connectDropTarget",
			"dimensionKey",
			"MenuItem",
			"scrollLeft",
			"startindex",
			"zoomIn",
			"Column",
			"row",
			"column",
			"props",
			"row",
			"Column",
			"column",
			"handleScrollToChange",
			"Colum",
			"Row",
			"scrollToRow",
			"selectRange",
			"selectCell",
			"getSelectedColumnRangeSelector",
			"isNullOrUndefined",
			"getLeaves",
			"generic",
			"ResizeHandle",
			"DimensionHeader",
			"Headers",
			"DimensionHeaders",
			"\n    ",
			"innerHeaderStyle",
			"getLeaves",
			"ContextMenu",
			"handleItemClick",
			"handleClick",
			"selectCe",
			"selectR",
			"rowLe",
			"copy",
			"dataDimensionsCount",
			"rowDim",
			"avail",
			"\n  ",
			"headers",
			"getRowHeight",
			"AxisType",
			"HeaderType",
			"MEASURE_ID",
			"toAxisType",
			"getLeaves",
			"selectCell",
			"columnsWidthSelector",
			"getDimensionValues",
			"getFilters",
			"getLastChildHeight",
			"getLastChildWidth",
			"getPreviewSizes",
			"getPreview",
			"getLastChild",
			"defaultCellSizesSelector",
			"getIndexesIntersectionFromDimensions",
			"cellValue",
			"getDataRows",
			"getCellDimensionInfosSelector",
			"export"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"dimensionValuesSelector",
			"getLastChildHeightSelector",
			"getLastChildWidthSelector",
			"previewSizesSelector",
			"getLayoutSelector",
			"getCellInfosSelector",
			"getCellDimensionInfosSelector",
			"toggleSortOrder",
			"toggleCollapseDimension",
			"columnLeavesSelector",
			"rowLeavesSelector",
			"columnHeadersSelector",
			"rowHeadersSelector",
			"dataCellsWidthSelector",
			"dataCellsHeightSelector",
			"rowsVisibleHeightSelector",
			"columnsVisibleWidthSelector",
			"crossPositionsSelector",
			"activatedMeasuresSelector",
			"availableDimensionsSelector",
			"columnDimensionsSelector",
			"rowDimensionsSelector",
			"columnsWidthSelector",
			"columnHeadersWidthSelector",
			"rowHeadersWidthSelector",
			"columnsWidthsSelector",
			"rowsHeightSelector",
			"defaultCellSizesSelector",
			"getCrossPositions",
			"getCrossSize",
			"getRowsWidth",
			"getRowsHeight",
			"getColumnsHeight",
			".columnHeaders.width",
			".rowHeaders.width",
			".rowHeaders.height",
			"rowHeaders",
			".columns.",
			"sizes.leaves",
			"orderedChildrenIds",
			"measureHeadersAxis",
			"measureHeadersLocation",
			"Dimension",
			"dimension",
			"Measure",
			"measure",
			"TOGGLE_MEASURE",
			"MOVE_DIMENSION",
			"TOGGLE_MEASURES",
			"SET_MEASURES",
			"SET_DIMENSIONS",
			"hgw",
			"t[`dbh]",
			"db_",
			"db[`db_version_step]",
			"db_version_step",
			"BOOKV2,",
			",BOO_",
			",MKP_",
			"BOOKV3,",
			".pos.d_ref",
			".pos.d_mo",
			"",
			".z_stm.b_trans",
			".z_trs.b_trans",
			".z_trs.l.b_trans",
			"\t",
			"",
			".z_msg.f.post_msg[`project`cd_mod`spec!``tp`",
			"(1=2)",
			"(=1)",
			"not[.Q.qt[v]]",
			".Q.qt[v]",
			"n_",
			"qp_",
			"dc",
			".d_get_zp.",
			"d_evt",
			"f",
			"f.post",
			"oo[`obj][`t]",
			"oo[`obj][`fi]",
			"oo[`sim][`scens]",
			"oo[`sim][`scen]",
			"oo[`sim][`simul]",
			"oo[`q][`p]",
			"oo[`sim][`zp_simul]",
			"oo[`sim][`zp]",
			"oo[`q][`w]",
			"oo[`q][`cby]",
			"oo[`q][`gby]",
			"oo[`q][`ids]",
			"oo[`q][`x]",
			"oo[`q][`c]",
			"oo[`obj][`bd]",
			"oo[`obj][`tp]",
			"oo[`obj][`pk]",
			"proj",
			"til 6",
			"",
			".mkv.FX",
			".mkv.fx",
			"lg_id_dic",
			"[p;msg]",
			"",
			"f.p.exec",
			"f.p.query_diff",
			"b_chg_sp_",
			"b_chg_sp",
			"`zps",
			"before_measure",
			"after_measure",
			".z_cub.f.fxc",
			".z_cub.f.px_mkt",
			".z_cub.f.disc",
			".z_cub.f.rsk",
			".z_cub.f.dcf",
			"b_upd_ctx",
			"subscription",
			"`project`cd_mod",
			"1-system_manager",
			"`qfact_var",
			".z_os.f.sleep",
			"read",
			".z_evt.",
			".z_csv.",
			".z.evt.",
			".z.evt"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/pivotGrid/components/DataCells/DataCells.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6701,
						"regions":
						{
						},
						"selection":
						[
							[
								5584,
								5584
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5583,
										5584
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										5576,
										5577
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2448.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/pivotGrid/components/ContextMenu/ContextMenu.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4058,
						"regions":
						{
						},
						"selection":
						[
							[
								3147,
								3154
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3166,
										3167
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3146,
										3147
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1536.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/pivotGrid/selectors/cell.selector.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4779,
						"regions":
						{
						},
						"selection":
						[
							[
								2600,
								2600
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2602,
										2603
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2576,
										2577
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 640.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/pivotGrid/utils/generic.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4141,
						"regions":
						{
						},
						"selection":
						[
							[
								2479,
								2479
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2928,
										2929
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2478,
										2479
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1389.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/pivotGrid/components/Header/Header.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4302,
						"regions":
						{
						},
						"selection":
						[
							[
								3066,
								3066
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3065,
										3066
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3048,
										3049
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1488.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/pivotGrid/components/DataCell/DataCell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2107,
						"regions":
						{
						},
						"selection":
						[
							[
								532,
								532
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										649,
										650
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										531,
										532
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 528.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/pivotGrid/Aggregation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2787,
						"regions":
						{
						},
						"selection":
						[
							[
								333,
								336
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										365,
										366
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										336,
										337
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 96.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/pivotGrid/services/copyService.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4778,
						"regions":
						{
						},
						"selection":
						[
							[
								866,
								887
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										929,
										930
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										887,
										888
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1632.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/PivotGrid.demo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7242,
						"regions":
						{
						},
						"selection":
						[
							[
								6644,
								6653
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6653,
										6654
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/single_quote.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										6643,
										6644
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3133.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/pivotGrid/components/PivotGrid/PivotGrid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12759,
						"regions":
						{
						},
						"selection":
						[
							[
								9940,
								9949
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										9972,
										9973
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										9854,
										9855
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3866.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 635.0
	},
	"output.find_results":
	{
		"height": 497.0
	},
	"output.unsaved_changes":
	{
		"height": 358.0
	},
	"pinned_build_system": "",
	"project": "grid.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"aggregations",
				"src\\pivotGrid\\Aggregation.js"
			],
			[
				"data",
				"src\\pivotGrid\\components\\DataCell\\DataCell.js"
			],
			[
				"context",
				"src\\pivotGrid\\components\\ContextMenu\\ContextMenu.js"
			],
			[
				"header",
				"src\\pivotGrid\\components\\Header\\Header.js"
			],
			[
				"",
				"src\\pivotGrid\\utils\\generic.js"
			],
			[
				"drilldown",
				"specs\\drilldownInterface.spec.md"
			],
			[
				"copyserv",
				"src\\pivotGrid\\services\\copyService.js"
			],
			[
				"mock",
				"src\\utils\\mock.js"
			],
			[
				"hydr",
				"src\\pivotGrid\\hydrateStore.js"
			],
			[
				"pivot",
				"src\\PivotGrid.demo.js"
			],
			[
				"dimension",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"dimhes",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"dim",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"datsel",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"dimen",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"dimesel",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"datasel",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"cellse",
				"src\\pivotGrid\\selectors\\cell.selector.js"
			],
			[
				"pivotgrid",
				"src\\pivotGrid\\components\\PivotGrid\\PivotGrid.js"
			],
			[
				"selix",
				"src\\pivotGrid\\selectors\\index.js"
			],
			[
				"dimsel",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"axissel",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"datace",
				"src\\pivotGrid\\containers\\DataCells.js"
			],
			[
				"datacell",
				"src\\pivotGrid\\components\\DataCell\\DataCell.js"
			],
			[
				"filter",
				"src\\pivotGrid\\containers\\Filter.js"
			],
			[
				"constantix",
				"src\\pivotGrid\\constants\\index.js"
			],
			[
				"datcell",
				"src\\pivotGrid\\containers\\DataCells.js"
			],
			[
				"datacells",
				"src\\pivotGrid\\components\\DataCells\\DataCells.js"
			],
			[
				"size",
				"src\\pivotGrid\\selectors\\sizes.selector.js"
			],
			[
				"headers",
				"src\\pivotGrid\\components\\Headers\\Headers.js"
			],
			[
				"ivotpivot",
				"src\\pivotGrid\\components\\PivotGrid\\PivotGrid.js"
			],
			[
				"filteract",
				"src\\pivotGrid\\actions\\filter.action.js"
			],
			[
				"filtering",
				"src\\pivotGrid\\Filtering.js"
			],
			[
				"dataselec",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"pivotpivot",
				"src\\pivotGrid\\containers\\PivotGrid.js"
			],
			[
				"dataselector",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"dimensionheaders",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"contextm",
				"src\\pivotGrid\\components\\ContextMenu\\ContextMenu.js"
			],
			[
				"he",
				"src\\pivotGrid\\utils\\headers.js"
			],
			[
				"pivotgridpiv",
				"src\\pivotGrid\\containers\\PivotGrid.js"
			],
			[
				"row",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"filte",
				"src\\pivotGrid\\Filtering.js"
			],
			[
				"dime",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"axis",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"dimensionh",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"contextmenu",
				"src\\pivotGrid\\components\\ContextMenu\\ContextMenu.js"
			],
			[
				"dimensionsel",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"dimheads",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"pivotgriddemo",
				"src\\PivotGrid.demo.js"
			],
			[
				"dimeh",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"dataselecto",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"filter.red",
				"src\\pivotGrid\\reducers\\filters.reducer.js"
			],
			[
				"pivotdemo",
				"src\\PivotGrid.demo.js"
			],
			[
				"cellselect",
				"src\\pivotGrid\\selectors\\cell.selector.js"
			],
			[
				"copys",
				"src\\pivotGrid\\services\\copyService.js"
			],
			[
				"ineerhe",
				"src\\pivotGrid\\components\\InnerHeader\\InnerHeader.js"
			],
			[
				"pivodemo",
				"src\\PivotGrid.demo.js"
			],
			[
				"rowh",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"axisred",
				"src\\pivotGrid\\reducers\\axis.reducer.js"
			],
			[
				"dim.red",
				"src\\pivotGrid\\reducers\\dimensions.reducer.js"
			],
			[
				"config.red",
				"src\\pivotGrid\\reducers\\config.reducer.js"
			],
			[
				"ivotgrid",
				"src\\PivotGrid.demo.js"
			],
			[
				"innerheader",
				"src\\pivotGrid\\components\\InnerHeader\\InnerHeader.js"
			],
			[
				"dimensel",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"column",
				"src\\pivotGrid\\containers\\ColumnHeaders.js"
			],
			[
				"indexcss",
				"src\\pivotGrid\\index.css"
			],
			[
				"selectoix",
				"src\\pivotGrid\\selectors\\index.js"
			],
			[
				"dimensionselect",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"reducerin",
				"src\\pivotGrid\\reducers\\index.js"
			],
			[
				"ivotgriddemo",
				"src\\PivotGrid.demo.js"
			],
			[
				"dimheader",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"dimh",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"dimenh",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"index.css",
				"src\\pivotGrid\\index.css"
			],
			[
				"selecred",
				"src\\pivotGrid\\reducers\\selection.reducer.js"
			],
			[
				"generic",
				"src\\pivotGrid\\utils\\generic.js"
			],
			[
				"cyser",
				"src\\pivotGrid\\services\\copyService.js"
			],
			[
				"configaction",
				"src\\pivotGrid\\actions\\config.action.js"
			],
			[
				"rowheaders",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"packas",
				"package.json"
			],
			[
				"collas",
				"src\\pivotGrid\\selectors\\collapses.selector.js"
			],
			[
				"innnerhe",
				"src\\pivotGrid\\components\\InnerHeader\\InnerHeader.js"
			],
			[
				"siac",
				"src\\pivotGrid\\actions\\sizes.action.js"
			],
			[
				"colhea",
				"src\\pivotGrid\\containers\\ColumnHeaders.js"
			],
			[
				"datcells",
				"src\\pivotGrid\\components\\DataCells\\DataCells.js"
			],
			[
				"selred",
				"src\\pivotGrid\\reducers\\selection.reducer.js"
			],
			[
				"sel",
				"src\\pivotGrid\\reducers\\selection.reducer.js"
			],
			[
				"roe",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"dasele",
				"src\\pivotGrid\\selectors\\data.selector.js"
			],
			[
				"indexs",
				"src\\pivotGrid\\selectors\\index.js"
			],
			[
				"wra",
				"src\\pivotGrid\\WrappedGrid.test.js"
			],
			[
				"axsel",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"axissete",
				"src\\pivotGrid\\selectors\\axis.selector.test.js"
			],
			[
				"sizsele",
				"src\\pivotGrid\\selectors\\sizes.selector.js"
			],
			[
				"rohead",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"datacelll",
				"src\\pivotGrid\\components\\DataCell\\DataCell.js"
			],
			[
				"selection",
				"src\\pivotGrid\\reducers\\selection.reducer.js"
			],
			[
				"selered",
				"src\\pivotGrid\\reducers\\selection.reducer.js"
			],
			[
				"selectionaction",
				"src\\pivotGrid\\actions\\selection.action.js"
			],
			[
				"ivot",
				"src\\pivotGrid\\components\\PivotGrid\\PivotGrid.js"
			],
			[
				"pivotgripivot",
				"src\\pivotGrid\\containers\\PivotGrid.js"
			],
			[
				"dimehe",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"dimeheaders",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"dimensionheade",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"dimensionsele",
				"src\\pivotGrid\\selectors\\dimensions.selector.js"
			],
			[
				"axisselector",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"sizeselector",
				"src\\pivotGrid\\selectors\\sizes.selector.js"
			],
			[
				"size.reducer",
				"src\\pivotGrid\\reducers\\sizes.reducer.js"
			],
			[
				"axisreducer",
				"src\\pivotGrid\\reducers\\axis.reducer.js"
			],
			[
				"rowhead",
				"src\\pivotGrid\\containers\\RowHeaders.js"
			],
			[
				"axisselec",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"dimensionaction",
				"src\\pivotGrid\\actions\\dimension.action.js"
			],
			[
				"dimhead",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"inirh",
				"src\\pivotGrid\\components\\InnerHeader\\InnerHeader.js"
			],
			[
				"pivotgridd",
				"src\\PivotGrid.demo.js"
			],
			[
				"dimenhead",
				"src\\pivotGrid\\components\\DimensionHeaders\\DimensionHeaders.js"
			],
			[
				"axissele",
				"src\\pivotGrid\\selectors\\axis.selector.js"
			],
			[
				"inn",
				"src\\pivotGrid\\components\\InnerHeader\\InnerHeader.js"
			],
			[
				"columnh",
				"src\\pivotGrid\\containers\\ColumnHeaders.js"
			],
			[
				"colh",
				"src\\pivotGrid\\containers\\ColumnHeaders.js"
			],
			[
				"sizesel",
				"src\\pivotGrid\\selectors\\sizes.selector.js"
			],
			[
				"selectix",
				"src\\pivotGrid\\selectors\\index.js"
			],
			[
				"coll",
				"src\\pivotGrid\\reducers\\collapses.reducer.js"
			],
			[
				"pivo",
				"src\\PivotGrid.demo.js"
			],
			[
				"col",
				"src\\pivotGrid\\containers\\ColumnHeaders.js"
			],
			[
				"dimensionhead",
				"src\\pivotGrid\\containers\\DimensionHeaders.js"
			],
			[
				"dimensionheader",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			],
			[
				"dimhe",
				"src\\pivotGrid\\components\\DimensionHeader\\DimensionHeader.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\thomas\\dev\\dev.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 490.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fsy",
				"f.sync"
			],
			[
				"ffcs",
				"f.fcsv_to_tbl"
			],
			[
				"loadt",
				"f.p.load_tables"
			],
			[
				"f.msg_end",
				"f.msg_end"
			],
			[
				"f.exec",
				"f.exec"
			],
			[
				"fpostex",
				"f.post_exec"
			],
			[
				"fposte",
				"f.post_evt"
			],
			[
				"subs",
				"f.subscribe"
			],
			[
				"fqtc",
				"f.qtc"
			],
			[
				"defd",
				"f.p.define_deployement"
			],
			[
				"initn",
				"f.p.init_nod"
			],
			[
				"fcx",
				"f.cx"
			],
			[
				"floadn",
				"f.load_nod"
			],
			[
				"fm",
				"f.b_month"
			],
			[
				"fpco",
				"f.post_config"
			],
			[
				"sysmcx",
				"z_nm.sysm.cx"
			],
			[
				"f.posc",
				"f.post_config"
			],
			[
				"blode",
				"z_nod.b_loaded"
			],
			[
				"postc",
				"f.post_config"
			],
			[
				"loadp",
				"f.load_project"
			],
			[
				"bhow",
				"z_nod.b_show"
			],
			[
				"initenv",
				"f.init_env"
			],
			[
				"z_smh",
				"z_nm.sysm.l.h"
			],
			[
				"fclo",
				"f.close"
			],
			[
				"asserttref",
				"assert.remoteFail"
			],
			[
				"init",
				"f.init"
			],
			[
				"faddl",
				"f.add_ln"
			],
			[
				"fpstm",
				"f.post_msg"
			],
			[
				"fconfgn",
				"f.config_nod"
			],
			[
				"fcfgn",
				"f.config_nod"
			],
			[
				"f_upd_cald",
				"f_upd_cald"
			],
			[
				"fpost",
				"f_post_msg"
			],
			[
				"fmsg",
				"f_msg"
			],
			[
				"",
				"ACC_ID_ARE"
			],
			[
				"fcsvt",
				"f_csv_to_tbl"
			],
			[
				"flode",
				"f_load_env"
			],
			[
				"ho",
				"home"
			],
			[
				"hom",
				"zeb_nod.home"
			],
			[
				"flotbl",
				"zeb_nod_mng.f_load_tbls"
			],
			[
				"fcre",
				"f_create_nod"
			],
			[
				"fgetseq",
				"f_get_seq"
			],
			[
				"f_init",
				"f_init"
			],
			[
				"finit",
				"f_init"
			],
			[
				"finite",
				"f_init_env"
			],
			[
				"fop",
				"f_open_instance"
			],
			[
				"ftry",
				"f_try_catch"
			],
			[
				"fsleep",
				"f_sleep"
			],
			[
				"fopeni",
				"f_open_instance"
			],
			[
				"f_save",
				"f_save"
			],
			[
				"zebobob",
				"zeb_obj.obj"
			],
			[
				"finito",
				"f_init_obj"
			],
			[
				"fdef",
				"f_default_params"
			],
			[
				"fl",
				"f_l"
			],
			[
				"fhasc",
				"f_has_chg"
			],
			[
				"fset",
				"f_set"
			],
			[
				"fass",
				"f_assign_seq"
			],
			[
				"fg",
				"f_g"
			],
			[
				"f_get",
				"f_get"
			],
			[
				"fmdea",
				"f_msg_dea"
			],
			[
				"fmsgd",
				"f_err_msg_id"
			],
			[
				"faddh",
				"f_add_h"
			],
			[
				"fproj",
				"f_proj"
			],
			[
				"fcsv",
				"f_csv_to_tbl"
			],
			[
				"f_tbl_to_csv",
				"f_tbl_to_csv"
			],
			[
				"finitd",
				"f_init_dt"
			],
			[
				"env",
				"env_mac"
			],
			[
				"fload",
				"f_load_quo"
			],
			[
				"f_discard_o_rdb",
				"f_discard_o_rdb"
			],
			[
				"fs",
				"f_s"
			],
			[
				"fopein",
				"f_open_instance"
			],
			[
				"fpa",
				"f_parse"
			],
			[
				"faver",
				"f_average"
			],
			[
				"f_fmt",
				"f_fmt"
			],
			[
				"fln",
				"f_ln"
			],
			[
				"finitdt",
				"f_init_dt"
			],
			[
				"ftspd",
				"z_dt.f_ts_pd_nth"
			],
			[
				"f_unit",
				"f_unit"
			],
			[
				"finenv",
				"f_init_env"
			],
			[
				"floadfr",
				"f_load_framework"
			],
			[
				"fsrcp",
				"zeb_env.f_src_path"
			]
		],
		"width": 490.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 457.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
